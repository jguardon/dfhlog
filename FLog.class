' Gambas class file
PRIVATE hres AS Result
PRIVATE disp AS Integer
PRIVATE pages AS Integer
PRIVATE currentPage AS Integer
PRIVATE records AS Integer
PRIVATE start AS Integer


PUBLIC SUB Form_Open()
    ME.Title = ("Log Review")
    prepararCV()
    disp = 100
    start = 0
    IF dbLog.connDB(FMain.ini["Log/File"]) THEN RETURN 
    
    hres = dbLog.cnLog.Exec("SELECT id FROM log")
    records = hres.Count
    dbLog.CloseDB()
    
    IF records > disp THEN 
        pages = Round(records / disp)
    ELSE 
        pages = 1
    ENDIF
    'DEBUG records
    getQSOs()

END

PRIVATE SUB prepararCV()
  
  cv.Columns.Count = 36
  
  cv.Columns[0].Title = ("Nr")
  cv.Columns[1].Text = ("Date")
  cv.Columns[2].Text = ("Time")
  cv.Columns[3].Text = ("Time Off")
  cv.Columns[4].Text = ("Callsign")
  cv.Columns[5].Text = ("Freq")
  cv.Columns[6].Text = ("Freq RX")
  cv.Columns[7].Text = ("Band")
  cv.Columns[8].Text = ("Mode")
  cv.Columns[9].Text = ("Propa.")
  cv.Columns[10].Text = "RST(R)"
  cv.Columns[11].Text = ("RST(S)")
  cv.Columns[12].Text = ("Name")
  cv.Columns[13].Text = "Locator"
  cv.Columns[14].Text = "QTH"
  cv.Columns[15].Text = ("Remarks")
  cv.Columns[16].Text = ("QSL(S)")
  cv.Columns[17].Text = "QSL(R)"
  cv.Columns[18].Text = ("QSL(S) Date")
  cv.Columns[19].Text = ("QSL(R) Date")  
  cv.Columns[20].Text = "QSL Via"  
  cv.Columns[21].Text = ("Prefix")
  cv.Columns[22].Text = "Cont."
  cv.Columns[23].Text = "CQz"
  cv.Columns[24].Text = "ITUz"
  cv.Columns[25].Text = ("State")
  cv.Columns[26].Text = ("County")
  cv.Columns[27].Text = "IOTA"
  cv.Columns[28].Text = ("Operator")
  cv.Columns[29].Text = ("Power")
  cv.Columns[30].Text = ("My Locator")
  cv.Columns[31].Text = ("Sat Name")
  cv.Columns[32].Text = ("Sat Mode")
  cv.Columns[33].Text = "Email"
  cv.Columns[34].Text = "DXCC"
  cv.Columns[35].Text = "TPEA"
  
  
END

PRIVATE SUB getQSOs(OPTIONAL p AS Integer = 0)
    
    DIM sql AS String
    DIM clave, swColor AS Integer
    cv.Clear()
    'p = start
    sql = "SELECT * FROM log ORDER BY id LIMIT " & p & ", " & disp & ";"

    IF dbLog.connDB(FMain.ini["Log/File"]) THEN RETURN
    hres = dbLog.cnLog.Exec(sql)
    cv.Rows.Count = hres.Count 
    
    DO WHILE hres.Available
    
        cv[clave, 0].Text = hres!id
        cv[clave, 0].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 1].Text = Format(hres!qso_date, "dd/mm/yyyy") 'Day(hres!qso_date) & "/" & Month(hres!qso_date) & "/" & Year(hres!qso_date)
        cv[clave, 1].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 2].Text = Left(hres!time_on, 5)
        cv[clave, 2].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 3].Text = Left(hres!time_off, 5)
        cv[clave, 3].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 4].Text = hres!call
        cv[clave, 4].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 5].Text = hres!freq
        cv[clave, 5].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 6].Text = hres!freq_rx
        cv[clave, 6].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 7].Text = hres!band
        cv[clave, 7].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 8].Text = hres!mode
        cv[clave, 8].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 9].Text = hres!prop_mode
        cv[clave, 9].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 10].Text = hres!rst_rcvd
        cv[clave, 10].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 11].Text = hres!rst_sent
        cv[clave, 11].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 12].Text = hres!name
        cv[clave, 12].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 13].Text = hres!gridsquare
        cv[clave, 13].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 14].Text = hres!qth
        cv[clave, 14].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 15].Text = hres!comment
        cv[clave, 15].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 16].Text = hres!qsl_sent
        cv[clave, 16].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 17].Text = hres!qsl_rcvd
        cv[clave, 17].Background = IIf(swColor, Color.White, Color.LightBackground)
        IF hres!qslsdate THEN cv[clave, 18].Text = Format(hres!qslsdate, "dd/mm/yyyy")
        cv[clave, 18].Background = IIf(swColor, Color.White, Color.LightBackground)
        IF hres!qslrdate THEN cv[clave, 19].Text = Format(hres!qslrdate, "dd/mm/yyyy")
        cv[clave, 19].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 20].Text = hres!qsl_via
        cv[clave, 20].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 21].Text = hres!pfx
        cv[clave, 21].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 22].Text = hres!cont
        cv[clave, 22].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 23].Text = hres!cqz
        cv[clave, 23].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 24].Text = hres!ituz
        cv[clave, 24].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 25].Text = hres!state
        cv[clave, 25].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 26].Text = hres!cnty
        cv[clave, 26].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 27].Text = hres!iota
        cv[clave, 27].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 28].Text = hres!operator
        cv[clave, 28].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 29].Text = hres!tx_pwr
        cv[clave, 29].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 30].Text = hres!my_gridsquare
        cv[clave, 30].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 31].Text = hres!sat_name
        cv[clave, 31].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 32].Text = hres!sat_mode
        cv[clave, 32].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 33].Text = hres!email
        cv[clave, 33].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 34].Text = hres!country
        cv[clave, 34].Background = IIf(swColor, Color.White, Color.LightBackground)
        cv[clave, 35].Text = hres!TPEA
        cv[clave, 35].Background = IIf(swColor, Color.White, Color.LightBackground)
        
    hres.MoveNext()
    INC clave 
    swColor = NOT swColor 
  LOOP 
  
  
  dbLog.CloseDB()
  cv.Refresh()
  
  IF pages > 1 THEN currentPage = (start / disp) + 1
    txtQSOs.Text = currentPage & (" of ") & (pages + 1)
    
    SELECT CASE start
    
        CASE 0
        
            btnFirst.Enabled = FALSE
            btnPrev.Enabled = FALSE
            btnLast.Enabled = TRUE
            btnNext.Enabled = TRUE
    
        CASE pages * disp
        
            btnLast.Enabled = FALSE
            btnNext.Enabled = FALSE
            btnFirst.Enabled = TRUE
            btnPrev.Enabled = TRUE
            
        CASE ELSE 
        
            btnFirst.Enabled = TRUE
            btnPrev.Enabled = TRUE
            btnLast.Enabled = TRUE
            btnNext.Enabled = TRUE
            
    END SELECT
END

PUBLIC SUB btnNext_Click()
    IF currentPage <= pages THEN 
    
        start += disp
        getQSOs(start)
    ENDIF 

END

PUBLIC SUB btnPrev_Click()
    
    IF start > 0 THEN 
        start -= disp
        getQSOs(start)
    ENDIF  

END

PUBLIC SUB btnFirst_Click()

    start = 0
    getQSOs(start)  

END

PUBLIC SUB btnLast_Click()

  start = pages * disp
  getQSOs(start)

END


PRIVATE SUB menuLog()
  
  DIM hMenus AS Menu
  DIM hMenu, hMenue AS Menu
  
  hMenus = NEW Menu(ME)
  
  hMenu = NEW Menu(hMenus)
  hMenu.Text = (("For QSO with: ") & cv[cv.Row, 3].Text)
  
  hMenu = NEW Menu(hMenus)
  hMenu.Text = ""
  
  hMenue = NEW Menu(hMenus) AS "mnuEditarQSO"
  hMenue.Text = ("Edit QSO")
  hMenue.Picture = Picture["gtk-undo-rtl.png"]
  'IF cv.Row > 1 THEN hMenue.enabled = FALSE
  
  hMenu = NEW Menu(hMenus) AS "mnuBorrarQSO"
  hMenu.Text = ("Delete QSO")
  hMenu.Picture = Picture["gtk-edit.png"]
  
  hMenu = NEW Menu(hMenus)
  hMenu.Text = ""
  
  hMenu = NEW Menu(hMenus) AS "mnuQSLrec"
  hMenu.Text = ("Check QSL as recvd.")
  hMenu.Picture = Picture["gtk-redo-rtl.png"]
  
  hMenu = NEW Menu(hMenus) AS "mnuQSLenv"
  hMenu.Text = ("Check QSL as sent.")
  hMenu.Picture = Picture["gtk-undo-rtl.png"]
  
  hMenu = NEW Menu(hMenus) AS "mnuPrintQSL"
  hMenu.Text = ("Print QSL")
  hMenu.Picture = Picture["gtk-print.png"]

  ' pop up 
  IF hMenus THEN hMenus.Popup()
  
  
END

PUBLIC SUB mnuEditarQSO_Click()
  TRY FMain.modifyQSO(CInt(cv[cv.Row, 0].Text))
  getQSOs(currentPage)
  cv.Refresh()
  
  ME.Lower()
  FMain.SetFocus()
  
END

PUBLIC SUB fillData()
  getQSOs(currentPage)
  cv.Refresh()

END


PUBLIC SUB mnuBorrarQSO_Click()
message("not yet functional")
    ' DIM qso AS String
    ' qso = grdQSO.Current.Text
    ' IF Message.Warning("Se borrará el QSO seleccionado\n¿Deseas continuar?", "Borrar QSO", "Cancelar") = 2 THEN RETURN
    ' IF connDB() THEN RETURN 
    ' dbLog.cnLog.Exec("DELETE FROM log WHERE id=" & qso & ";")
    ' fillData()
    ' CATCH 
    '     Message.Error("Error al borrar QSO\n" & Error.Text)
END
PUBLIC SUB mnuQSLrec_Click()
  FMain.setQSLrcvd(CInt(cv[cv.Row, 0].Text))
  
END
PUBLIC SUB mnuQSLenv_Click()
  FMain.setQSLsent(CInt(cv[cv.Row, 0].Text))
END
PUBLIC SUB mnuPrintQSL_Click()
  message("not yet functional")
END

PUBLIC SUB cv_Menu()
     
  menuLog()
 
 
END



PUBLIC SUB btnClose_Click()

  ME.Close()

END
