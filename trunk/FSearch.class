' Gambas class file
' dfhLog- Hamradio LogBook
'     Copyright (C) 2009  Jesús Guardón, EA7DFH <ea7dfh@gmail.com>
' 
'     This program is free software: you can redistribute it and/or modify
'     it under the terms of the GNU General Public License as published by
'     the Free Software Foundation, either version 3 of the License, or
'     (at your option) any later version.
' 
'     This program is distributed in the hope that it will be useful,
'     but WITHOUT ANY WARRANTY; without even the implied warranty of
'     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'     GNU General Public License for more details.
' 
'     You should have received a copy of the GNU General Public License
'     along with this program.  If not, see <http://www.gnu.org/licenses/>.

PRIVATE $hres AS Result
PRIVATE $rf AS ResultField
PRIVATE $aMyFields AS NEW String[]
PUBLIC active AS Boolean = FALSE

PUBLIC SUB Form_Open()
    
    DIM propa, banda, modo, sql AS String
    DIM resul AS Result
    active = TRUE
    ME.Move(FMain.ScreenX + (FMain.Width - ME.Width) / 2, FMain.ScreenY + (FMain.Height - ME.Height) / 2)
    prepararCV()    
    
    ME.Title = ("Log Search")
    
    cboProp.Add(("All"), 0)
    FOR EACH propa IN global.getPropa()
        cboProp.Add(propa)
    NEXT
    cboBand.Add(("All"), 0)
    FOR EACH banda IN global.getBandas()
        cboBand.Add(banda)
    NEXT
    cboMode.Add(("All"), 0)
    FOR EACH modo IN global.getModos()
        cboMode.Add(modo)
    NEXT
    IF dbLog.connDB(FMain.ini["Log/File"]) THEN RETURN 
    sql = "SELECT id, qso_date, time_on, call, band, mode, prop_mode, rst_rcvd, rst_sent, name, gridsquare, qsl_sent, qsl_rcvd, " &
    "qsl_via, pfx, country, cont, cqz, ituz, operator, tx_pwr, my_gridsquare, sat_name, distance, comment " &
    "FROM log;"   
    resul = dbLog.cnLog.Exec(sql)
    
    FOR EACH $rf IN resul.Fields   
      $aMyFields.Add($rf.Name)           
    NEXT 
    
    dtIni.Value = Date(1900, 1, 1)
    dtFin.Value = Now()
    

END

PRIVATE SUB prepararCV()
  
  cv.Columns.Count = 25
  
  cv.Columns[0].Title = ("Nr")
  cv.Columns[1].Text = ("Date")
  cv.Columns[2].Text = ("Time")
  cv.Columns[3].Text = ("Callsign")
  cv.Columns[4].Text = ("Band")
  cv.Columns[5].Text = ("Mode")
  cv.Columns[6].Text = ("Propa.")
  cv.Columns[7].Text = "RST(R)"
  cv.Columns[8].Text = "RST(E)"
  cv.Columns[9].Text = ("Name")
  cv.Columns[10].Text = "Locator"
  cv.Columns[11].Text = ("QSL(S)")
  cv.Columns[12].Text = "QSL(R)"
  cv.Columns[13].Text = "QSL Via"  
  cv.Columns[14].Text = ("Prefix")
  cv.Columns[15].Text = "DXCC"
  cv.Columns[16].Text = "Cont."
  cv.Columns[17].Text = "CQz"
  cv.Columns[18].Text = "ITUz"
  cv.Columns[19].Text = ("Operator")
  cv.Columns[20].Text = ("Power")
  cv.Columns[21].Text = ("My Locator")
  cv.Columns[22].Text = ("Satellite")
  cv.Columns[23].Text = ("Distance (Km)")
  cv.Columns[24].Text = ("Remarks")
  
  
END

PRIVATE SUB searchQSO()
    
    DIM sql AS String    
    DIM dist AS Integer 
    INC Application.Busy
    IF vDist.Value = NULL THEN 
        dist = 0
    ELSE 
        dist = vDist.Value
    ENDIF 
    'cv.Clear()
    
    sql = "SELECT id, qso_date, time_on, call, band, mode, prop_mode, rst_rcvd, rst_sent, name, gridsquare, qsl_sent, qsl_rcvd, " &
    "qsl_via, pfx, country, cont, cqz, ituz, operator, tx_pwr, my_gridsquare, sat_name, distance, comment " &
    "FROM log WHERE qso_date BETWEEN &1 AND &2 AND call LIKE &3 AND band LIKE &4 and mode LIKE &5 " &
    "AND prop_mode LIKE &6 AND qsl_rcvd LIKE &7 AND gridsquare LIKE &8 AND distance >= &9 ORDER BY id ASC;"
    
    IF dbLog.connDB(FMain.ini["Log/File"]) THEN RETURN    
    $hres = dbLog.cnLog.Exec(sql, dtIni.Value, dtFin.Value, txtCall.Text & "%", parseCbo(cboBand), parseCbo(cboMode), parseCbo(cboProp), parseQSL(), txtLoc.Text & "%", dist)
    cv.Rows.Count = $hres.Count
     
    lblNumRec.Text = ("Records: ") & $hres.Count
    cv.Refresh
    DEC Application.Busy
    
    CATCH       
      DEBUG Error.Text & "\n" & Error.Where
    
END

PUBLIC SUB btnSave2txt_Click()
    
    DIM ii AS Integer = 70
    DIM F AS File
    DIM comm AS String
    DIM filename AS String = Temp$
    DIM sql AS String    
    DIM dist AS Integer 
    DIM hres AS Result
    INC Application.Busy
    IF vDist.Value = NULL THEN 
        dist = 0
    ELSE 
        dist = vDist.Value
    ENDIF 
    'cv.Clear()
    
    sql = "SELECT id, qso_date, time_on, call, band, mode, prop_mode, rst_rcvd, rst_sent, name, gridsquare, qsl_sent, qsl_rcvd, " &
    "qsl_via, pfx, country, cont, cqz, ituz, operator, tx_pwr, my_gridsquare, sat_name, distance, comment " &
    "FROM log WHERE qso_date BETWEEN &1 AND &2 AND call LIKE &3 AND band LIKE &4 and mode LIKE &5 " &
    "AND prop_mode LIKE &6 AND qsl_rcvd LIKE &7 AND gridsquare LIKE &8 AND distance >= &9 ORDER BY id ASC;"
    
    IF dbLog.connDB(FMain.ini["Log/File"]) THEN RETURN    
    hres = dbLog.cnLog.Exec(sql, dtIni.Value, dtFin.Value, txtCall.Text & "%", parseCbo(cboBand), parseCbo(cboMode), parseCbo(cboProp), parseQSL(), txtLoc.Text & "%", dist)
    cv.Rows.Count = hres.Count
    
    F = OPEN filename FOR OUTPUT CREATE
    PRINT #F, fitText("Date", 11) & fitText("UTC", 6) & fitText("Callsign", 13) & fitText("Band", 7, TRUE) & fitText("Mode", 7) & fitText("Locator", 8) & fitText("Cfmd", 5) & fitText("MGR", 8) & "Remarks"
    PRINT #F, String(100, "-")
    IF hres THEN 
        WHILE hres.Available
            INC ii
            PRINT #F, fitText(global.parseFecha(hres!qso_date), 11) & fitText(Left(hres!time_on, 5), 6) & fitText(hres!call, 13) & fitText(hres!band, 7, TRUE) & fitText(hres!mode, 7) & fitText(hres!gridsquare, 8) & fitText(hres!qsl_rcvd, 5) & fitText(hres!qsl_via, 8) & Left(hres!comment, 35)
            IF ii MOD 70 = 0 THEN 
                PRINT #F, fitText("Date", 11) & fitText("UTC", 6) & fitText("Callsign", 13) & fitText("Band", 7, TRUE) & fitText("Mode", 7) & fitText("Locator", 8) & fitText("Cfmd", 5) & fitText("MGR", 8) & "Remarks"
                PRINT #F, String(100, "-")
            ENDIF     
            hres.MoveNext
        WEND 
        PRINT #F, "\n"
        PRINT #F, ("Records: ") & hres.Count
        CLOSE #F
        DEC Application.Busy
        Desktop.Open(filename) 
    ENDIF
    
    CATCH       
      DEBUG Error.Text & "\n" & Error.Where 
END

PUBLIC FUNCTION fitText(subject AS String, lenght AS Integer, OPTIONAL alignRight AS Boolean) AS String
    DIM iSpaces AS Integer
    DIM iLen AS Integer = Len(subject)
    iSpaces = lenght - iLen
    IF alignRight THEN 
        RETURN Space(iSpaces - 1) & subject & Space(1)
    ELSE 
        RETURN subject & Space(iSpaces)
    ENDIF 
END

PUBLIC SUB cv_Data(Row AS Integer, Column AS Integer)
    
    $hres.MoveTo(Row)    
    IF Column = 1 THEN 
        cv.Data.Text = Format$($hres[$aMyFields[Column]], "dd/mm/yyyy")
    ELSE       
        cv.Data.Text = $hres[$aMyFields[Column]]    
    ENDIF 
    
    IF row MOD 2 = 0 THEN cv.Data.Background = Color.LightBackground
    CATCH 
        DEBUG Error.Text & "\n" & Error.Where 

END

PRIVATE SUB menuLog()
  
  DIM hMenus AS Menu
  DIM hMenu, hMenue AS Menu
  
  hMenus = NEW Menu(ME)
  
  hMenu = NEW Menu(hMenus)
  getSelectedQSO()
  IF global.$iQSOn.Count > 1 THEN 
        hMenu.Text = ("For selected QSOs: ") & global.$iQSOn.Count
  ELSE 
        hMenu.Text = (("For QSO with: ") & cv[cv.Row, 3].Text)
  ENDIF 
  
  hMenu = NEW Menu(hMenus)
  hMenu.Text = ""
  
  hMenue = NEW Menu(hMenus) AS "mnuEditarQSO"
  hMenue.Text = ("Edit QSO")
  hMenue.Picture = Picture["icons/gtk-edit.png"]
  hMenue.Shortcut = "Ctrl+M"
  IF global.$iQSOn.Count > 1 THEN hMenue.enabled = FALSE
  
  hMenu = NEW Menu(hMenus) AS "mnuBorrarQSO"
  hMenu.Text = ("Delete QSO")
  hMenu.Picture = Picture["icons/gtk-delete.png"]
  hMenu.Shortcut = "Ctrl+D"
  
  hMenu = NEW Menu(hMenus)
  hMenu.Text = ""
  
  hMenu = NEW Menu(hMenus) AS "mnuQSLrec"
  hMenu.Text = ("Check QSL as recvd.")
  hMenu.Picture = Picture["icons/gtk-redo-rtl.png"]
  hMenu.Shortcut = "F5"
  
  hMenu = NEW Menu(hMenus) AS "mnuQSLenv"
  hMenu.Text = ("Check QSL as sent.")
  hMenu.Picture = Picture["icons/gtk-undo-rtl.png"]
  hMenu.Shortcut = "F6"
  
  hMenu = NEW Menu(hMenus)
  hMenu.Text = ""
  
  hMenu = NEW Menu(hMenus) AS "mnuQSLnotrec"
  hMenu.Text = ("Uncheck QSL as recvd.")
  hMenu.Picture = Picture["icons/gtk-redo-not.png"]
  hMenu.Shortcut = "F7"
  
  hMenu = NEW Menu(hMenus) AS "mnuQSLnotenv"
  hMenu.Text = ("Uncheck QSL as sent.")
  hMenu.Picture = Picture["icons/gtk-undo-not.png"]
  hMenu.Shortcut = "F8"
  
  hMenu = NEW Menu(hMenus)
  hMenu.Text = ""
  
  hMenu = NEW Menu(hMenus) AS "mnuPrintQSL"
  hMenu.Text = ("Print QSL")
  hMenu.Picture = Picture["icons/gtk-print.png"]
  hMenu.Shortcut = "Ctrl+P"

  ' pop up 
  IF hMenus THEN hMenus.Popup()
  
  
END

PUBLIC SUB getSelectedQSO()
    DIM i AS Integer 
    global.$iQSOn.Clear()
    FOR i = 0 TO cv.Rows.Count - 1   
        IF cv.Rows[i].Selected = TRUE THEN 
            global.$iQSOn.Add(CInt(cv[i, 0].Text))
        ENDIF 
    NEXT 
END

PUBLIC SUB mnuEditarQSO_Click()
    IF global.$iQSOn.Count = 1 THEN 
        FMain.modifyQSO(CInt(cv[cv.Row, 0].Text))
        FMain.Visible = TRUE
    ENDIF   
END

PUBLIC SUB fillData()
  INC Application.Busy
  searchQSO()
  DEC Application.Busy
END

PUBLIC SUB mnuBorrarQSO_Click()
    DIM i AS Integer    
    IF Message.Warning(("Selected QSO will be deleted\nDo you want to continue?"), ("Delete QSO"), ("Cancel")) = 2 THEN RETURN
    IF dbLog.connDB(FMain.ini["Log/File"]) THEN RETURN 
    FOR i = 0 TO global.$iQSOn.Count - 1
        dbLog.cnLog.Exec("DELETE FROM log WHERE id=&1;", global.$iQSOn[i])
    NEXT     
    fillData()
    FMain.fillData()
     CATCH 
        Message.Error(("Error deleting QSO\n") & Error.Text & "\n" & Error.Where)
END

PUBLIC SUB mnuQSLrec_Click()
  FMain.setQSLrcvd(global.$iQSOn)
  fillData()
END

PUBLIC SUB mnuQSLenv_Click()
  FMain.setQSLsent(global.$iQSOn)
  fillData()
END

PUBLIC SUB mnuQSLnotrec_Click()
    FMain.setQSLrcvd(global.$iQSOn, TRUE)
    fillData()  
END

PUBLIC SUB mnuQSLnotenv_Click()
    FMain.setQSLsent(global.$iQSOn, TRUE)
    fillData()
END

PUBLIC SUB mnuPrintQSL_Click()
    DIM i AS Integer
    FOR i = 0 TO global.$iQSOn.Count - 1
        TRY global.addToQueue(global.$iQSOn[i])
    NEXT
    IF NOT ERROR THEN Message.Info(("Added ") & global.$iAdded2Queue & (" QSOs to the QSL print queue."))
END

PUBLIC SUB cv_Menu()
     
  TRY menuLog()
  cv.Rows.Unselect()
  
END

PUBLIC SUB btnClose_Click()

  ME.Close()

END

PUBLIC SUB btnOK_Click()
    fillData()
END

PRIVATE FUNCTION parseCbo(cbo AS ComboBox) AS String
  DIM s AS String

  IF cbo.Index = 0 THEN 
    s = "%"
  ELSE 
    s = cbo.Text
  ENDIF 
  
  RETURN s

END

PRIVATE FUNCTION parseQSL() AS String
  
  DIM s AS String
  
  IF chkCfd.Value = TRUE THEN 
    s = "Y"
  ELSE 
    s = "%"
  ENDIF 
  
  RETURN s
  
END

PUBLIC SUB btnReset_Click()
    dtIni.Value = Date(1900, 1, 1)
    dtFin.Value = Now()
END

PUBLIC SUB btnCalIni_Click()
    FCal.getDatePicker(btnCalIni, "fsearch_i")
END

PUBLIC SUB setDateIni(d AS Date)
    dtIni.Value = d
END

PUBLIC SUB btnCalFin_Click()
    FCal.getDatePicker(btnCalFin, "fsearch_f")
END

PUBLIC SUB setDateFin(d AS Date)
    dtFin.Value = d
END

PUBLIC SUB txtCall_Change()

  txtCall.Text = Upper(txtCall.Text)

END

PUBLIC SUB Form_Close()

  active = FALSE

END

PUBLIC SUB txtLoc_Change()

  txtLoc.Text = Upper(txtLoc.Text)

END



