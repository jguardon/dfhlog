' Gambas module file
PRIVATE hTable AS Table
PRIVATE i AS Integer = 0

PUBLIC PROCEDURE CreateTable()

  ' Generated by the Gambas database manager - 13/01/2009 12:55:44

  
  DIM hres AS Result

  
    IF dbLog.connDB(FMain.ini["Log/File"]) THEN RETURN 
    IF dbLog.cnLog.Tables.Exist("temp") THEN dbLog.cnLog.Tables.Remove("temp")
    hTable = dbLog.cnLog.Tables.Add("temp")

  WITH hTable

    .Fields.Add("id", db.Serial)
    .Fields.Add("qso_date", db.Date)
    .Fields.Add("time_on", db.String, 8)
    .Fields.Add("time_off", db.String, 8)
    .Fields.Add("call", db.String, 20)
    .Fields.Add("freq", db.String, 15)
    .Fields.Add("freq_rx", db.String, 15)
    .Fields.Add("band", db.String, 5)
    .Fields.Add("mode", db.String, 8)
    .Fields.Add("prop_mode", db.String, 5)
    .Fields.Add("rst_rcvd", db.String, 3)
    .Fields.Add("rst_sent", db.String, 3)
    .Fields.Add("name", db.String, 20)
    .Fields.Add("gridsquare", db.String, 6)
    .Fields.Add("qth", db.String, 50)
    .Fields.Add("comment", db.String, 50)
    .Fields.Add("qsl_sent", db.String, 1)
    .Fields.Add("qsl_rcvd", db.String, 1)
    .Fields.Add("qslsdate", db.String, 10)
    .Fields.Add("qslrdate", db.String, 10)
    .Fields.Add("qsl_via", db.String, 10)
    .Fields.Add("pfx", db.String, 5)
    .Fields.Add("cont", db.String, 3)
    .Fields.Add("cqz", db.Integer)
    .Fields.Add("ituz", db.Integer)
    .Fields.Add("state", db.String, 3)
    .Fields.Add("cnty", db.String, 20)
    .Fields.Add("iota", db.String, 10)
    .Fields.Add("operator", db.String, 20)
    .Fields.Add("tx_pwr", db.String, 10)
    .Fields.Add("my_gridsquare", db.String, 6)
    .Fields.Add("sat_name", db.String, 20)
    .Fields.Add("sat_mode", db.String, 10)
    .Fields.Add("email", db.String, 30)
    .Fields.Add("country", db.String, 30)
    .Fields.Add("dxcc", db.Integer)
    .Fields.Add("TPEA", db.String, 2)
    
     .PrimaryKey = ["id"]

    .Update

  END WITH
  
    copyData()
  
    dbLog.CloseDB()
    
    ' CATCH 
    '     Message.Error(("Error in CreateTableTemp:\n") & Error.Text)
    
END

PUBLIC PROCEDURE CreateTableLog()
  
  DIM hres AS Result

  
    IF dbLog.connDB(FMain.ini["Log/File"]) THEN RETURN 
    IF dbLog.cnLog.Tables.Exist("log") THEN dbLog.cnLog.Tables.Remove("log")
    hTable = dbLog.cnLog.Tables.Add("log")

  WITH hTable

    .Fields.Add("id", db.Serial)
    .Fields.Add("qso_date", db.Date)
    .Fields.Add("time_on", db.String, 8)
    .Fields.Add("time_off", db.String, 8)
    .Fields.Add("call", db.String, 20)
    .Fields.Add("freq", db.String, 15)
    .Fields.Add("freq_rx", db.String, 15)
    .Fields.Add("band", db.String, 5)
    .Fields.Add("mode", db.String, 8)
    .Fields.Add("prop_mode", db.String, 5)
    .Fields.Add("rst_rcvd", db.String, 3)
    .Fields.Add("rst_sent", db.String, 3)
    .Fields.Add("name", db.String, 20)
    .Fields.Add("gridsquare", db.String, 6)
    .Fields.Add("qth", db.String, 50)
    .Fields.Add("comment", db.String, 50)
    .Fields.Add("qsl_sent", db.String, 1)
    .Fields.Add("qsl_rcvd", db.String, 1)
    .Fields.Add("qslsdate", db.String, 10)
    .Fields.Add("qslrdate", db.String, 10)
    .Fields.Add("qsl_via", db.String, 10)
    .Fields.Add("pfx", db.String, 5)
    .Fields.Add("cont", db.String, 3)
    .Fields.Add("cqz", db.Integer)
    .Fields.Add("ituz", db.Integer)
    .Fields.Add("state", db.String, 3)
    .Fields.Add("cnty", db.String, 20)
    .Fields.Add("iota", db.String, 10)
    .Fields.Add("operator", db.String, 20)
    .Fields.Add("tx_pwr", db.String, 10)
    .Fields.Add("my_gridsquare", db.String, 6)
    .Fields.Add("sat_name", db.String, 20)
    .Fields.Add("sat_mode", db.String, 10)
    .Fields.Add("email", db.String, 30)
    .Fields.Add("country", db.String, 30)
    .Fields.Add("dxcc", db.Integer)
    .Fields.Add("TPEA", db.String, 2)
    
     .PrimaryKey = ["id"]

    .Update

  END WITH
  
    restoreData()
    
    ' CATCH 
    '     Message.Error(("Error in CreateTableLog:\n") & Error.Text)
    
END

PUBLIC PROCEDURE copyData()
    DIM hres AS Result
    DIM sql, sql2 AS String
    hres = dbLog.cnLog.Exec("SELECT id FROM log")
    i = hres.Max + 2
    sql = "SELECT * FROM log ORDER BY qso_date, time_on;"
     
     sql2 = "INSERT INTO temp VALUES (&1,&2,&3,&4,&5,&6,&7,&8,&9,&10,&11,&12,&13,&14,&15,&16,&17,&18," &
              "&19,&20,&21,&22,&23,&24,&25,&26,&27,&28,&29,&30,&31,&32,&33,&34,&35,&36,&37);"
    
    hres = dbLog.cnLog.Exec(sql)
    dbLog.cnLog.Begin()
    WHILE hres.Available
        
        dbLog.cnLog.Exec(sql2, "", hres!qso_date, hres!time_on, hres!time_off, hres!call, hres!freq, hres!freq_rx, hres!band, hres!mode, hres!prop_mode, hres!rst_rcvd, hres!rst_sent, hres!name, hres!gridsquare, hres!qth, hres!comment, hres!qsl_sent, hres!qsl_rcvd, hres!qslsdate, hres!qslrdate, hres!qsl_via, hres!pfx, hres!cont, hres!cqz, hres!ituz, hres!state, hres!cnty, hres!iota, hres!operator, hres!tx_pwr, hres!my_gridsquare, hres!sat_name, hres!sat_mode, hres!email, hres!country, hres!dxcc, hres!TPEA)
        DEC i
        'DEBUG i
        hres.MoveNext()
    
    WEND
    dbLog.cnLog.Commit()
    CreateTableLog()
    
    ' CATCH 
    '     Message.Error(("Error in CopyData:\n") & Error.Text)
  
END

PUBLIC PROCEDURE restoreData()

    DIM hres AS Result
    DIM sql AS String
    
    sql = "INSERT INTO log SELECT * FROM temp ORDER BY qso_date, time_on;"
    dbLog.cnLog.Begin()
    hres = dbLog.cnLog.Exec(sql)
    dbLog.cnLog.Commit()
    IF dbLog.cnLog.Tables.Exist("temp") THEN dbLog.cnLog.Tables.Remove("temp")
    
    ' CATCH 
    '     Message.Error(("Error in RestoreData:\n") & Error.Text)
    
  
END
